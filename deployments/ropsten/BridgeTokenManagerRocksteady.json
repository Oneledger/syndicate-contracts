{
  "address": "0xF11D6d5285FC02f13a8579182fdaC26795524574",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum IBridgeTokenManager.IssueType",
                  "name": "issueType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IBridgeTokenManager.Token",
              "name": "enterToken",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum IBridgeTokenManager.IssueType",
                  "name": "issueType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IBridgeTokenManager.Token",
              "name": "exitToken",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "exist",
              "type": "bool"
            }
          ],
          "indexed": true,
          "internalType": "struct IBridgeTokenManager.Link",
          "name": "link",
          "type": "tuple"
        }
      ],
      "name": "LinkAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum IBridgeTokenManager.IssueType",
                  "name": "issueType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IBridgeTokenManager.Token",
              "name": "enterToken",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum IBridgeTokenManager.IssueType",
                  "name": "issueType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IBridgeTokenManager.Token",
              "name": "exitToken",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "exist",
              "type": "bool"
            }
          ],
          "indexed": true,
          "internalType": "struct IBridgeTokenManager.Link",
          "name": "link",
          "type": "tuple"
        }
      ],
      "name": "LinkRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_SIZE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "name": "fetch",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum IBridgeTokenManager.IssueType",
              "name": "issueType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBridgeTokenManager.Token",
          "name": "token",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "enum IBridgeTokenManager.IssueType[]",
          "name": "issueTypes",
          "type": "uint8[]"
        },
        {
          "internalType": "uint256[]",
          "name": "chainIds",
          "type": "uint256[]"
        }
      ],
      "name": "issue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x445fffc7ab37c91cacbfe8ae90c068fdfa59bbd10612ec0777e755aa4840edc0",
  "receipt": {
    "to": null,
    "from": "0x03E9Afdc30DB6F94E5F40779e288bC4883a1109A",
    "contractAddress": "0xF11D6d5285FC02f13a8579182fdaC26795524574",
    "transactionIndex": 16,
    "gasUsed": "1671535",
    "logsBloom": "0x
    "blockHash": "0x664945ea94afd2f9a9bd16bc9d68b2ebf88aa9882f0de1f029fe77b8b89f9bf5",
    "transactionHash": "0x445fffc7ab37c91cacbfe8ae90c068fdfa59bbd10612ec0777e755aa4840edc0",
    "logs": [
      {
        "transactionIndex": 16,
        "blockNumber": 11278388,
        "transactionHash": "0x445fffc7ab37c91cacbfe8ae90c068fdfa59bbd10612ec0777e755aa4840edc0",
        "address": "0xF11D6d5285FC02f13a8579182fdaC26795524574",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000003e9afdc30db6f94e5f40779e288bc4883a1109a"
        ],
        "data": "0x",
        "logIndex": 15,
        "blockHash": "0x664945ea94afd2f9a9bd16bc9d68b2ebf88aa9882f0de1f029fe77b8b89f9bf5"
      }
    ],
    "blockNumber": 11278388,
    "cumulativeGasUsed": "4003651",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "9bc37b57028c128c505140e8abf744db",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType\",\"name\":\"issueType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBridgeTokenManager.Token\",\"name\":\"enterToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType\",\"name\":\"issueType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBridgeTokenManager.Token\",\"name\":\"exitToken\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"indexed\":true,\"internalType\":\"struct IBridgeTokenManager.Link\",\"name\":\"link\",\"type\":\"tuple\"}],\"name\":\"LinkAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType\",\"name\":\"issueType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBridgeTokenManager.Token\",\"name\":\"enterToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType\",\"name\":\"issueType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBridgeTokenManager.Token\",\"name\":\"exitToken\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"indexed\":true,\"internalType\":\"struct IBridgeTokenManager.Link\",\"name\":\"link\",\"type\":\"tuple\"}],\"name\":\"LinkRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SIZE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"fetch\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType\",\"name\":\"issueType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBridgeTokenManager.Token\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType[]\",\"name\":\"issueTypes\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"}],\"name\":\"issue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fetch(address,uint256)\":{\"details\":\"This should be responsible to get token mapping for current chain\",\"params\":{\"addr\":\"address of token to get it's association\",\"chainId\":\"of domain where token used\"}},\"issue(address[],uint8[],uint256[])\":{\"details\":\"This should be responsible to connect tokens between chains\",\"params\":{\"chainIds\":\"where they are located\",\"issueTypes\":\"for tokens\",\"tokens\":\"addresses on link connection\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revoke(address,uint256)\":{\"details\":\"This should be responsible to remove tokens connection between chains\",\"params\":{\"addr\":\"address of token to revoke\",\"chainId\":\"of domain where token used\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/managers/BridgeTokenManager.sol\":\"BridgeTokenManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/interfaces/IBridgeTokenManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IBridgeTokenManager {\\n    event LinkAdded(Link indexed link);\\n    event LinkRemoved(Link indexed link);\\n\\n    enum IssueType {\\n        DEFAULT,\\n        MINTABLE\\n    }\\n\\n    struct Token {\\n        address addr;\\n        IssueType issueType;\\n        uint256 chainId;\\n    }\\n\\n    struct Link {\\n        Token enterToken;\\n        Token exitToken;\\n        bool exist;\\n    }\\n\\n    function issue(\\n        address[] calldata tokens,\\n        IssueType[] calldata issueTypes,\\n        uint256[] calldata chainIds\\n    ) external;\\n\\n    function revoke(address addr, uint256 chainId) external;\\n\\n    function fetch(address addr, uint256 chainId)\\n        external\\n        view\\n        returns (Token memory token, bool ok);\\n}\\n\",\"keccak256\":\"0xfc00cd65693c6c686be13448efae32c5a593048bd572608aca7268123c3bd63e\",\"license\":\"MIT\"},\"contracts/managers/BridgeTokenManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../interfaces/IBridgeTokenManager.sol\\\";\\n\\ncontract BridgeTokenManager is Ownable, IBridgeTokenManager {\\n    uint8 public constant MAX_SIZE = 2;\\n    bytes32 private immutable _salt;\\n\\n    mapping(bytes32 => Link) private _links;\\n\\n    constructor() {\\n        _salt = keccak256(\\n            abi.encodePacked(\\n                blockhash(block.number - 1),\\n                block.timestamp,\\n                block.difficulty,\\n                block.coinbase\\n            )\\n        );\\n    }\\n\\n    /**\\n     * @dev This should be responsible to get token mapping for current chain\\n     * @param addr address of token to get it's association\\n     * @param chainId of domain where token used\\n     */\\n    function fetch(address addr, uint256 chainId)\\n        public\\n        view\\n        override\\n        returns (Token memory token, bool ok)\\n    {\\n        Link memory link = _get(addr, chainId);\\n        if (!link.exist) {\\n            return (token, ok);\\n        }\\n\\n        if (\\n            link.enterToken.chainId == chainId ||\\n            link.exitToken.chainId == chainId\\n        ) {\\n            token = link.enterToken;\\n            ok = true;\\n        }\\n        return (token, ok);\\n    }\\n\\n    /**\\n     * @dev This should be responsible to remove tokens connection between chains\\n     * @param addr address of token to revoke\\n     * @param chainId of domain where token used\\n     */\\n    function revoke(address addr, uint256 chainId) external override onlyOwner {\\n        Link memory link = _get(addr, chainId);\\n        require(link.exist, \\\"BridgeTokenManager: NOT_EXIST\\\");\\n\\n        _remove(link);\\n\\n        emit LinkRemoved(link);\\n    }\\n\\n    /**\\n     * @dev This should be responsible to connect tokens between chains\\n     * @param tokens addresses on link connection\\n     * @param issueTypes for tokens\\n     * @param chainIds where they are located\\n     */\\n    function issue(\\n        address[] calldata tokens,\\n        IssueType[] calldata issueTypes,\\n        uint256[] calldata chainIds\\n    ) external override onlyOwner {\\n        require(\\n            tokens.length == issueTypes.length,\\n            \\\"BridgeTokenManager: WRONG_LENGTH\\\"\\n        );\\n        require(\\n            tokens.length == chainIds.length,\\n            \\\"BridgeTokenManager: WRONG_LENGTH\\\"\\n        );\\n        require(tokens.length == MAX_SIZE, \\\"BridgeTokenManager: MAX_SIZE\\\");\\n\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        require(chainIds[0] == chainId, \\\"BridgeTokenManager: WRONG_CHAIN_ID\\\");\\n\\n        Link memory link = _insert(\\n            Token(tokens[0], issueTypes[0], chainIds[0]),\\n            Token(tokens[1], issueTypes[1], chainIds[1])\\n        );\\n\\n        emit LinkAdded(link);\\n    }\\n\\n    function _set(Link memory link) private {\\n        _links[_key(link.enterToken.addr, link.enterToken.chainId)] = link;\\n        _links[_key(link.exitToken.addr, link.exitToken.chainId)] = link;\\n    }\\n\\n    function _remove(Link memory link) private {\\n        delete _links[_key(link.enterToken.addr, link.enterToken.chainId)];\\n        delete _links[_key(link.exitToken.addr, link.exitToken.chainId)];\\n    }\\n\\n    function _get(address addr, uint256 chainId)\\n        private\\n        view\\n        returns (Link memory link)\\n    {\\n        link = _links[_key(addr, chainId)];\\n    }\\n\\n    function _key(address addr, uint256 chainId)\\n        private\\n        view\\n        returns (bytes32)\\n    {\\n        return keccak256(abi.encodePacked(_salt, addr, chainId));\\n    }\\n\\n    function _insert(Token memory enterToken, Token memory exitToken)\\n        private\\n        returns (Link memory)\\n    {\\n        Link memory exitLink = _get(exitToken.addr, exitToken.chainId);\\n        require(!exitLink.exist, \\\"BridgeTokenManager: EXIT_EXIST\\\");\\n\\n        Link memory link = Link(enterToken, exitToken, true);\\n        _set(link);\\n\\n        return link;\\n    }\\n}\\n\",\"keccak256\":\"0x22e8ba802450359477fa29297e3d327eb976f11d1a723a1c744074b0c39a0a00\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5062000032620000266200007d60201b60201c565b6200008560201b60201c565b600143620000419190620001f0565b404244416040516020016200005a94939291906200019a565b6040516020818303038152906040528051906020012060808181525050620002eb565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200015e62000158826200022b565b62000273565b82525050565b6200017962000173826200023f565b62000287565b82525050565b620001946200018e8262000269565b620002a5565b82525050565b6000620001a8828762000164565b602082019150620001ba82866200017f565b602082019150620001cc82856200017f565b602082019150620001de828462000149565b60148201915081905095945050505050565b6000620001fd8262000269565b91506200020a8362000269565b92508282101562000220576200021f620002af565b5b828203905092915050565b6000620002388262000249565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620002808262000291565b9050919050565b6000819050919050565b60006200029e82620002de565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b608051611cda6200030760003960006112010152611cda6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f7ec2f01161005b5780638f7ec2f0146100c8578063de5ed097146100e4578063eac449d914610115578063f2fde38b146101315761007d565b8063715018a6146100825780638d67799e1461008c5780638da5cb5b146100aa575b600080fd5b61008a61014d565b005b6100946101d5565b6040516100a191906119c3565b60405180910390f35b6100b26101da565b6040516100bf919061189f565b60405180910390f35b6100e260048036038101906100dd9190611472565b610203565b005b6100fe60048036038101906100f99190611436565b6106c1565b60405161010c92919061199a565b60405180910390f35b61012f600480360381019061012a9190611436565b61071e565b005b61014b6004803603810190610146919061140d565b61083c565b005b610155610934565b73ffffffffffffffffffffffffffffffffffffffff166101736101da565b73ffffffffffffffffffffffffffffffffffffffff16146101c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c09061193a565b60405180910390fd5b6101d3600061093c565b565b600281565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020b610934565b73ffffffffffffffffffffffffffffffffffffffff166102296101da565b73ffffffffffffffffffffffffffffffffffffffff161461027f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102769061193a565b60405180910390fd5b8383905086869050146102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be9061197a565b60405180910390fd5b81819050868690501461030f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103069061197a565b60405180910390fd5b600260ff168686905014610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f9061195a565b60405180910390fd5b60004690508083836000818110610398577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135146103df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d6906118fa565b60405180910390fd5b600061067360405180606001604052808a8a6000818110610429577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061043e919061140d565b73ffffffffffffffffffffffffffffffffffffffff16815260200188886000818110610493577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906104a89190611516565b60018111156104e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018686600081811061051f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013581525060405180606001604052808b8b600181811061056e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610583919061140d565b73ffffffffffffffffffffffffffffffffffffffff168152602001898960018181106105d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906105ed9190611516565b6001811115610625577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200187876001818110610664577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815250610a00565b9050806040516106839190611884565b60405180910390207f7e4725d7a6d8fcc459e5ed68a5dd4f3b22ef573547210fe86491927a0f6e1dd060405160405180910390a25050505050505050565b6106c9611252565b6000806106d68585610a99565b905080604001516106e75750610717565b838160000151604001511480610704575083816020015160400151145b156107155780600001519250600191505b505b9250929050565b610726610934565b73ffffffffffffffffffffffffffffffffffffffff166107446101da565b73ffffffffffffffffffffffffffffffffffffffff161461079a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107919061193a565b60405180910390fd5b60006107a68383610a99565b905080604001516107ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e3906118da565b60405180910390fd5b6107f581610ce1565b806040516108039190611884565b60405180910390207f6d4cad8ce607bb77bfbd2b4c279a73df339dd1e7b7fdf84a9ad79a1e26048b9360405160405180910390a2505050565b610844610934565b73ffffffffffffffffffffffffffffffffffffffff166108626101da565b73ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af9061193a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f906118ba565b60405180910390fd5b6109318161093c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a086112c1565b6000610a1c83600001518460400151610a99565b9050806040015115610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a9061191a565b60405180910390fd5b60006040518060600160405280868152602001858152602001600115158152509050610a8e81610e92565b809250505092915050565b610aa16112c1565b60016000610aaf85856111fd565b8152602001908152602001600020604051806060016040529081600082016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610b79577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610bb1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016001820154815250508152602001600282016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610c74577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610cac577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160018201548152505081526020016004820160009054906101000a900460ff161515151581525050905092915050565b60016000610cff8360000151600001518460000151604001516111fd565b81526020019081526020016000206000808201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556001820160009055505060028201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055600182016000905550506004820160006101000a81549060ff0219169055505060016000610dd68360200151600001518460200151604001516111fd565b81526020019081526020016000206000808201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556001820160009055505060028201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055600182016000905550506004820160006101000a81549060ff0219169055505050565b8060016000610eb18460000151600001518560000151604001516111fd565b815260200190815260200160002060008201518160000160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115610f60577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060208201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115611012577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060408201518160040160006101000a81548160ff02191690831515021790555090505080600160006110658460200151600001518560200151604001516111fd565b815260200190815260200160002060008201518160000160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115611114577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060208201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360018111156111c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060408201518160040160006101000a81548160ff02191690831515021790555090505050565b60007f0000000000000000000000000000000000000000000000000000000000000000838360405160200161123493929190611847565b60405160208183030381529060405280519060200120905092915050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600060018111156112b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081525090565b60405180606001604052806112d4611252565b81526020016112e1611252565b81526020016000151581525090565b6000813590506112ff81611c66565b92915050565b60008083601f84011261131757600080fd5b8235905067ffffffffffffffff81111561133057600080fd5b60208301915083602082028301111561134857600080fd5b9250929050565b60008083601f84011261136157600080fd5b8235905067ffffffffffffffff81111561137a57600080fd5b60208301915083602082028301111561139257600080fd5b9250929050565b60008083601f8401126113ab57600080fd5b8235905067ffffffffffffffff8111156113c457600080fd5b6020830191508360208202830111156113dc57600080fd5b9250929050565b6000813590506113f281611c7d565b92915050565b60008135905061140781611c8d565b92915050565b60006020828403121561141f57600080fd5b600061142d848285016112f0565b91505092915050565b6000806040838503121561144957600080fd5b6000611457858286016112f0565b9250506020611468858286016113f8565b9150509250929050565b6000806000806000806060878903121561148b57600080fd5b600087013567ffffffffffffffff8111156114a557600080fd5b6114b189828a01611305565b9650965050602087013567ffffffffffffffff8111156114d057600080fd5b6114dc89828a0161134f565b9450945050604087013567ffffffffffffffff8111156114fb57600080fd5b61150789828a01611399565b92509250509295509295509295565b60006020828403121561152857600080fd5b6000611536848285016113e3565b91505092915050565b600061154b83836115d5565b60208301905092915050565b6000611563838361160a565b60208301905092915050565b600061157b838361163f565b60208301905092915050565b600061159383836117c4565b60608301905092915050565b60006115ab8383611812565b60208301905092915050565b6115c0816119ef565b82525050565b6115cf816119ef565b82525050565b6115de816119ef565b82525050565b6115f56115f0826119ef565b611a73565b82525050565b61160481611a01565b82525050565b61161381611a01565b82525050565b61162a61162582611a0d565b611a85565b82525050565b61163981611a61565b82525050565b61164881611a61565b82525050565b600061165b6026836119de565b915061166682611ae7565b604082019050919050565b600061167e601d836119de565b915061168982611b36565b602082019050919050565b60006116a16022836119de565b91506116ac82611b5f565b604082019050919050565b60006116c4601e836119de565b91506116cf82611bae565b602082019050919050565b60006116e76020836119de565b91506116f282611bd7565b602082019050919050565b600061170a601c836119de565b915061171582611c00565b602082019050919050565b600061172d6020836119de565b915061173882611c29565b602082019050919050565b6000820160008201516117568482611587565b93505060208201516117688482611587565b935050604082015161177a8482611557565b935050505050565b60608201600082015161179860008501826115b7565b5060208201516117ab6020850182611630565b5060408201516117be6040850182611803565b50505050565b6000820160008201516117d7848261153f565b93505060208201516117e9848261156f565b93505060408201516117fb848261159f565b935050505050565b61180c81611a4a565b82525050565b61181b81611a4a565b82525050565b61183261182d82611a4a565b611aa1565b82525050565b61184181611a54565b82525050565b60006118538286611619565b60208201915061186382856115e4565b6014820191506118738284611821565b602082019150819050949350505050565b60006118908284611743565b60e08201915081905092915050565b60006020820190506118b460008301846115c6565b92915050565b600060208201905081810360008301526118d38161164e565b9050919050565b600060208201905081810360008301526118f381611671565b9050919050565b6000602082019050818103600083015261191381611694565b9050919050565b60006020820190508181036000830152611933816116b7565b9050919050565b60006020820190508181036000830152611953816116da565b9050919050565b60006020820190508181036000830152611973816116fd565b9050919050565b6000602082019050818103600083015261199381611720565b9050919050565b60006080820190506119af6000830185611782565b6119bc60608301846115fb565b9392505050565b60006020820190506119d86000830184611838565b92915050565b600082825260208201905092915050565b60006119fa82611a2a565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611a2582611c52565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611a6c82611a17565b9050919050565b6000611a7e82611a8f565b9050919050565b6000819050919050565b6000611a9a82611ada565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f427269646765546f6b656e4d616e616765723a204e4f545f4558495354000000600082015250565b7f427269646765546f6b656e4d616e616765723a2057524f4e475f434841494e5f60008201527f4944000000000000000000000000000000000000000000000000000000000000602082015250565b7f427269646765546f6b656e4d616e616765723a20455849545f45584953540000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f427269646765546f6b656e4d616e616765723a204d41585f53495a4500000000600082015250565b7f427269646765546f6b656e4d616e616765723a2057524f4e475f4c454e475448600082015250565b60028110611c6357611c62611aab565b5b50565b611c6f816119ef565b8114611c7a57600080fd5b50565b60028110611c8a57600080fd5b50565b611c9681611a4a565b8114611ca157600080fd5b5056fea26469706673582212201934f80db591dc9103b4279426eaeb75ad1c454f2d1c0e8c527dba9a4aa6f46864736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f7ec2f01161005b5780638f7ec2f0146100c8578063de5ed097146100e4578063eac449d914610115578063f2fde38b146101315761007d565b8063715018a6146100825780638d67799e1461008c5780638da5cb5b146100aa575b600080fd5b61008a61014d565b005b6100946101d5565b6040516100a191906119c3565b60405180910390f35b6100b26101da565b6040516100bf919061189f565b60405180910390f35b6100e260048036038101906100dd9190611472565b610203565b005b6100fe60048036038101906100f99190611436565b6106c1565b60405161010c92919061199a565b60405180910390f35b61012f600480360381019061012a9190611436565b61071e565b005b61014b6004803603810190610146919061140d565b61083c565b005b610155610934565b73ffffffffffffffffffffffffffffffffffffffff166101736101da565b73ffffffffffffffffffffffffffffffffffffffff16146101c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c09061193a565b60405180910390fd5b6101d3600061093c565b565b600281565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020b610934565b73ffffffffffffffffffffffffffffffffffffffff166102296101da565b73ffffffffffffffffffffffffffffffffffffffff161461027f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102769061193a565b60405180910390fd5b8383905086869050146102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be9061197a565b60405180910390fd5b81819050868690501461030f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103069061197a565b60405180910390fd5b600260ff168686905014610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f9061195a565b60405180910390fd5b60004690508083836000818110610398577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135146103df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d6906118fa565b60405180910390fd5b600061067360405180606001604052808a8a6000818110610429577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061043e919061140d565b73ffffffffffffffffffffffffffffffffffffffff16815260200188886000818110610493577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906104a89190611516565b60018111156104e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018686600081811061051f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013581525060405180606001604052808b8b600181811061056e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610583919061140d565b73ffffffffffffffffffffffffffffffffffffffff168152602001898960018181106105d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906105ed9190611516565b6001811115610625577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200187876001818110610664577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815250610a00565b9050806040516106839190611884565b60405180910390207f7e4725d7a6d8fcc459e5ed68a5dd4f3b22ef573547210fe86491927a0f6e1dd060405160405180910390a25050505050505050565b6106c9611252565b6000806106d68585610a99565b905080604001516106e75750610717565b838160000151604001511480610704575083816020015160400151145b156107155780600001519250600191505b505b9250929050565b610726610934565b73ffffffffffffffffffffffffffffffffffffffff166107446101da565b73ffffffffffffffffffffffffffffffffffffffff161461079a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107919061193a565b60405180910390fd5b60006107a68383610a99565b905080604001516107ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e3906118da565b60405180910390fd5b6107f581610ce1565b806040516108039190611884565b60405180910390207f6d4cad8ce607bb77bfbd2b4c279a73df339dd1e7b7fdf84a9ad79a1e26048b9360405160405180910390a2505050565b610844610934565b73ffffffffffffffffffffffffffffffffffffffff166108626101da565b73ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af9061193a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f906118ba565b60405180910390fd5b6109318161093c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a086112c1565b6000610a1c83600001518460400151610a99565b9050806040015115610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a9061191a565b60405180910390fd5b60006040518060600160405280868152602001858152602001600115158152509050610a8e81610e92565b809250505092915050565b610aa16112c1565b60016000610aaf85856111fd565b8152602001908152602001600020604051806060016040529081600082016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610b79577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610bb1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016001820154815250508152602001600282016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610c74577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610cac577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160018201548152505081526020016004820160009054906101000a900460ff161515151581525050905092915050565b60016000610cff8360000151600001518460000151604001516111fd565b81526020019081526020016000206000808201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556001820160009055505060028201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055600182016000905550506004820160006101000a81549060ff0219169055505060016000610dd68360200151600001518460200151604001516111fd565b81526020019081526020016000206000808201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556001820160009055505060028201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055600182016000905550506004820160006101000a81549060ff0219169055505050565b8060016000610eb18460000151600001518560000151604001516111fd565b815260200190815260200160002060008201518160000160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115610f60577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060208201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115611012577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060408201518160040160006101000a81548160ff02191690831515021790555090505080600160006110658460200151600001518560200151604001516111fd565b815260200190815260200160002060008201518160000160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115611114577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060208201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360018111156111c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060408201518160040160006101000a81548160ff02191690831515021790555090505050565b60007f0000000000000000000000000000000000000000000000000000000000000000838360405160200161123493929190611847565b60405160208183030381529060405280519060200120905092915050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600060018111156112b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081525090565b60405180606001604052806112d4611252565b81526020016112e1611252565b81526020016000151581525090565b6000813590506112ff81611c66565b92915050565b60008083601f84011261131757600080fd5b8235905067ffffffffffffffff81111561133057600080fd5b60208301915083602082028301111561134857600080fd5b9250929050565b60008083601f84011261136157600080fd5b8235905067ffffffffffffffff81111561137a57600080fd5b60208301915083602082028301111561139257600080fd5b9250929050565b60008083601f8401126113ab57600080fd5b8235905067ffffffffffffffff8111156113c457600080fd5b6020830191508360208202830111156113dc57600080fd5b9250929050565b6000813590506113f281611c7d565b92915050565b60008135905061140781611c8d565b92915050565b60006020828403121561141f57600080fd5b600061142d848285016112f0565b91505092915050565b6000806040838503121561144957600080fd5b6000611457858286016112f0565b9250506020611468858286016113f8565b9150509250929050565b6000806000806000806060878903121561148b57600080fd5b600087013567ffffffffffffffff8111156114a557600080fd5b6114b189828a01611305565b9650965050602087013567ffffffffffffffff8111156114d057600080fd5b6114dc89828a0161134f565b9450945050604087013567ffffffffffffffff8111156114fb57600080fd5b61150789828a01611399565b92509250509295509295509295565b60006020828403121561152857600080fd5b6000611536848285016113e3565b91505092915050565b600061154b83836115d5565b60208301905092915050565b6000611563838361160a565b60208301905092915050565b600061157b838361163f565b60208301905092915050565b600061159383836117c4565b60608301905092915050565b60006115ab8383611812565b60208301905092915050565b6115c0816119ef565b82525050565b6115cf816119ef565b82525050565b6115de816119ef565b82525050565b6115f56115f0826119ef565b611a73565b82525050565b61160481611a01565b82525050565b61161381611a01565b82525050565b61162a61162582611a0d565b611a85565b82525050565b61163981611a61565b82525050565b61164881611a61565b82525050565b600061165b6026836119de565b915061166682611ae7565b604082019050919050565b600061167e601d836119de565b915061168982611b36565b602082019050919050565b60006116a16022836119de565b91506116ac82611b5f565b604082019050919050565b60006116c4601e836119de565b91506116cf82611bae565b602082019050919050565b60006116e76020836119de565b91506116f282611bd7565b602082019050919050565b600061170a601c836119de565b915061171582611c00565b602082019050919050565b600061172d6020836119de565b915061173882611c29565b602082019050919050565b6000820160008201516117568482611587565b93505060208201516117688482611587565b935050604082015161177a8482611557565b935050505050565b60608201600082015161179860008501826115b7565b5060208201516117ab6020850182611630565b5060408201516117be6040850182611803565b50505050565b6000820160008201516117d7848261153f565b93505060208201516117e9848261156f565b93505060408201516117fb848261159f565b935050505050565b61180c81611a4a565b82525050565b61181b81611a4a565b82525050565b61183261182d82611a4a565b611aa1565b82525050565b61184181611a54565b82525050565b60006118538286611619565b60208201915061186382856115e4565b6014820191506118738284611821565b602082019150819050949350505050565b60006118908284611743565b60e08201915081905092915050565b60006020820190506118b460008301846115c6565b92915050565b600060208201905081810360008301526118d38161164e565b9050919050565b600060208201905081810360008301526118f381611671565b9050919050565b6000602082019050818103600083015261191381611694565b9050919050565b60006020820190508181036000830152611933816116b7565b9050919050565b60006020820190508181036000830152611953816116da565b9050919050565b60006020820190508181036000830152611973816116fd565b9050919050565b6000602082019050818103600083015261199381611720565b9050919050565b60006080820190506119af6000830185611782565b6119bc60608301846115fb565b9392505050565b60006020820190506119d86000830184611838565b92915050565b600082825260208201905092915050565b60006119fa82611a2a565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611a2582611c52565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611a6c82611a17565b9050919050565b6000611a7e82611a8f565b9050919050565b6000819050919050565b6000611a9a82611ada565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f427269646765546f6b656e4d616e616765723a204e4f545f4558495354000000600082015250565b7f427269646765546f6b656e4d616e616765723a2057524f4e475f434841494e5f60008201527f4944000000000000000000000000000000000000000000000000000000000000602082015250565b7f427269646765546f6b656e4d616e616765723a20455849545f45584953540000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f427269646765546f6b656e4d616e616765723a204d41585f53495a4500000000600082015250565b7f427269646765546f6b656e4d616e616765723a2057524f4e475f4c454e475448600082015250565b60028110611c6357611c62611aab565b5b50565b611c6f816119ef565b8114611c7a57600080fd5b50565b60028110611c8a57600080fd5b50565b611c9681611a4a565b8114611ca157600080fd5b5056fea26469706673582212201934f80db591dc9103b4279426eaeb75ad1c454f2d1c0e8c527dba9a4aa6f46864736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "fetch(address,uint256)": {
        "details": "This should be responsible to get token mapping for current chain",
        "params": {
          "addr": "address of token to get it's association",
          "chainId": "of domain where token used"
        }
      },
      "issue(address[],uint8[],uint256[])": {
        "details": "This should be responsible to connect tokens between chains",
        "params": {
          "chainIds": "where they are located",
          "issueTypes": "for tokens",
          "tokens": "addresses on link connection"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revoke(address,uint256)": {
        "details": "This should be responsible to remove tokens connection between chains",
        "params": {
          "addr": "address of token to revoke",
          "chainId": "of domain where token used"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 393,
        "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3594,
        "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
        "label": "_links",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(Link)2227_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(IssueType)2210": {
        "encoding": "inplace",
        "label": "enum IBridgeTokenManager.IssueType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_bytes32,t_struct(Link)2227_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct IBridgeTokenManager.Link)",
        "numberOfBytes": "32",
        "value": "t_struct(Link)2227_storage"
      },
      "t_struct(Link)2227_storage": {
        "encoding": "inplace",
        "label": "struct IBridgeTokenManager.Link",
        "members": [
          {
            "astId": 2221,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "enterToken",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Token)2218_storage"
          },
          {
            "astId": 2224,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "exitToken",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Token)2218_storage"
          },
          {
            "astId": 2226,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "exist",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Token)2218_storage": {
        "encoding": "inplace",
        "label": "struct IBridgeTokenManager.Token",
        "members": [
          {
            "astId": 2212,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2215,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "issueType",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(IssueType)2210"
          },
          {
            "astId": 2217,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}