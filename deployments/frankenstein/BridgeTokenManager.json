{
  "address": "0x3ABAE9Fb11125846dE6bc44C5eD0aFA73feC96f1",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum IBridgeTokenManager.IssueType",
                  "name": "issueType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IBridgeTokenManager.Token",
              "name": "enterToken",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum IBridgeTokenManager.IssueType",
                  "name": "issueType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IBridgeTokenManager.Token",
              "name": "exitToken",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "exist",
              "type": "bool"
            }
          ],
          "indexed": true,
          "internalType": "struct IBridgeTokenManager.Link",
          "name": "link",
          "type": "tuple"
        }
      ],
      "name": "LinkAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum IBridgeTokenManager.IssueType",
                  "name": "issueType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IBridgeTokenManager.Token",
              "name": "enterToken",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum IBridgeTokenManager.IssueType",
                  "name": "issueType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IBridgeTokenManager.Token",
              "name": "exitToken",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "exist",
              "type": "bool"
            }
          ],
          "indexed": true,
          "internalType": "struct IBridgeTokenManager.Link",
          "name": "link",
          "type": "tuple"
        }
      ],
      "name": "LinkRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_SIZE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "name": "fetch",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum IBridgeTokenManager.IssueType",
              "name": "issueType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBridgeTokenManager.Token",
          "name": "token",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "enum IBridgeTokenManager.IssueType[]",
          "name": "issueTypes",
          "type": "uint8[]"
        },
        {
          "internalType": "uint256[]",
          "name": "chainIds",
          "type": "uint256[]"
        }
      ],
      "name": "issue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe136e793972e5cfc6c2e6a28e02e186f8cb5e395038f4a9bbf06fdaae5157c58",
  "receipt": {
    "to": null,
    "from": "0x73b72d6EE63e16c898AD18C7f447846BfC3AB1aC",
    "contractAddress": "0x3ABAE9Fb11125846dE6bc44C5eD0aFA73feC96f1",
    "transactionIndex": 0,
    "gasUsed": "1676090",
    "logsBloom": "0x
    "blockHash": "0xe76a6d7fca88e0fcdaa2c6dce934f1a3199f063e6e69da945aab2760754b9ac9",
    "transactionHash": "0xe136e793972e5cfc6c2e6a28e02e186f8cb5e395038f4a9bbf06fdaae5157c58",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 41401,
        "transactionHash": "0xe136e793972e5cfc6c2e6a28e02e186f8cb5e395038f4a9bbf06fdaae5157c58",
        "address": "0x3ABAE9Fb11125846dE6bc44C5eD0aFA73feC96f1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000073b72d6ee63e16c898ad18c7f447846bfc3ab1ac"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xe76a6d7fca88e0fcdaa2c6dce934f1a3199f063e6e69da945aab2760754b9ac9"
      }
    ],
    "blockNumber": 41401,
    "cumulativeGasUsed": "1676090",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "176dd62f0f90c034c9abbccb1e4ae6e3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType\",\"name\":\"issueType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBridgeTokenManager.Token\",\"name\":\"enterToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType\",\"name\":\"issueType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBridgeTokenManager.Token\",\"name\":\"exitToken\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"indexed\":true,\"internalType\":\"struct IBridgeTokenManager.Link\",\"name\":\"link\",\"type\":\"tuple\"}],\"name\":\"LinkAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType\",\"name\":\"issueType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBridgeTokenManager.Token\",\"name\":\"enterToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType\",\"name\":\"issueType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBridgeTokenManager.Token\",\"name\":\"exitToken\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"indexed\":true,\"internalType\":\"struct IBridgeTokenManager.Link\",\"name\":\"link\",\"type\":\"tuple\"}],\"name\":\"LinkRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SIZE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"fetch\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType\",\"name\":\"issueType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct IBridgeTokenManager.Token\",\"name\":\"token\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"enum IBridgeTokenManager.IssueType[]\",\"name\":\"issueTypes\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"}],\"name\":\"issue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fetch(address,uint256)\":{\"details\":\"This should be responsible to get token mapping for cross chain\",\"params\":{\"addr\":\"address of token to get it's association\",\"chainId\":\"of domain where token used\"}},\"issue(address[],uint8[],uint256[])\":{\"details\":\"This should be responsible to connect tokens between chains\",\"params\":{\"chainIds\":\"where they are located\",\"issueTypes\":\"for tokens\",\"tokens\":\"addresses on link connection\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revoke(address,uint256)\":{\"details\":\"This should be responsible to remove tokens connection between chains\",\"params\":{\"addr\":\"address of token to revoke\",\"chainId\":\"of domain where token used\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/managers/BridgeTokenManager.sol\":\"BridgeTokenManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/interfaces/IBridgeTokenManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IBridgeTokenManager {\\n    event LinkAdded(Link indexed link);\\n    event LinkRemoved(Link indexed link);\\n\\n    enum IssueType {\\n        DEFAULT,\\n        MINTABLE\\n    }\\n\\n    struct Token {\\n        address addr;\\n        IssueType issueType;\\n        uint256 chainId;\\n    }\\n\\n    struct Link {\\n        Token enterToken;\\n        Token exitToken;\\n        bool exist;\\n    }\\n\\n    function issue(\\n        address[] calldata tokens,\\n        IssueType[] calldata issueTypes,\\n        uint256[] calldata chainIds\\n    ) external;\\n\\n    function revoke(address addr, uint256 chainId) external;\\n\\n    function fetch(address addr, uint256 chainId)\\n        external\\n        view\\n        returns (Token memory token, bool ok);\\n}\\n\",\"keccak256\":\"0xfc00cd65693c6c686be13448efae32c5a593048bd572608aca7268123c3bd63e\",\"license\":\"MIT\"},\"contracts/managers/BridgeTokenManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../interfaces/IBridgeTokenManager.sol\\\";\\n\\ncontract BridgeTokenManager is Ownable, IBridgeTokenManager {\\n    uint8 public constant MAX_SIZE = 2;\\n    bytes32 private immutable _salt;\\n\\n    mapping(bytes32 => Link) private _links;\\n\\n    constructor() {\\n        _salt = keccak256(\\n            abi.encodePacked(\\n                blockhash(block.number - 1),\\n                block.timestamp,\\n                block.difficulty,\\n                block.coinbase\\n            )\\n        );\\n    }\\n\\n    /**\\n     * @dev This should be responsible to get token mapping for cross chain\\n     * @param addr address of token to get it's association\\n     * @param chainId of domain where token used\\n     */\\n    function fetch(address addr, uint256 chainId)\\n        public\\n        view\\n        override\\n        returns (Token memory token, bool ok)\\n    {\\n        Link memory link = _get(addr, chainId);\\n        if (!link.exist) {\\n            return (token, ok);\\n        }\\n\\n        uint256 currentChainId;\\n        assembly {\\n            currentChainId := chainid()\\n        }\\n\\n        if (link.enterToken.chainId == currentChainId) {\\n            token = link.enterToken;\\n            ok = true;\\n        } else if (link.exitToken.chainId == currentChainId) {\\n            token = link.exitToken;\\n            ok = true;\\n        }\\n        return (token, ok);\\n    }\\n\\n    /**\\n     * @dev This should be responsible to remove tokens connection between chains\\n     * @param addr address of token to revoke\\n     * @param chainId of domain where token used\\n     */\\n    function revoke(address addr, uint256 chainId) external override onlyOwner {\\n        Link memory link = _get(addr, chainId);\\n        require(link.exist, \\\"BridgeTokenManager: NOT_EXIST\\\");\\n\\n        _remove(link);\\n\\n        emit LinkRemoved(link);\\n    }\\n\\n    /**\\n     * @dev This should be responsible to connect tokens between chains\\n     * @param tokens addresses on link connection\\n     * @param issueTypes for tokens\\n     * @param chainIds where they are located\\n     */\\n    function issue(\\n        address[] calldata tokens,\\n        IssueType[] calldata issueTypes,\\n        uint256[] calldata chainIds\\n    ) external override onlyOwner {\\n        require(\\n            tokens.length == issueTypes.length,\\n            \\\"BridgeTokenManager: WRONG_LENGTH\\\"\\n        );\\n        require(\\n            tokens.length == chainIds.length,\\n            \\\"BridgeTokenManager: WRONG_LENGTH\\\"\\n        );\\n        require(tokens.length == MAX_SIZE, \\\"BridgeTokenManager: MAX_SIZE\\\");\\n\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        require(chainIds[0] == chainId, \\\"BridgeTokenManager: WRONG_CHAIN_ID\\\");\\n\\n        Link memory link = _insert(\\n            Token(tokens[0], issueTypes[0], chainIds[0]),\\n            Token(tokens[1], issueTypes[1], chainIds[1])\\n        );\\n\\n        emit LinkAdded(link);\\n    }\\n\\n    function _set(Link memory link) private {\\n        _links[_key(link.enterToken.addr, link.enterToken.chainId)] = link;\\n        _links[_key(link.exitToken.addr, link.exitToken.chainId)] = link;\\n    }\\n\\n    function _remove(Link memory link) private {\\n        delete _links[_key(link.enterToken.addr, link.enterToken.chainId)];\\n        delete _links[_key(link.exitToken.addr, link.exitToken.chainId)];\\n    }\\n\\n    function _get(address addr, uint256 chainId)\\n        private\\n        view\\n        returns (Link memory link)\\n    {\\n        link = _links[_key(addr, chainId)];\\n    }\\n\\n    function _key(address addr, uint256 chainId)\\n        private\\n        view\\n        returns (bytes32)\\n    {\\n        return keccak256(abi.encodePacked(_salt, addr, chainId));\\n    }\\n\\n    function _insert(Token memory enterToken, Token memory exitToken)\\n        private\\n        returns (Link memory)\\n    {\\n        Link memory exitLink = _get(exitToken.addr, exitToken.chainId);\\n        require(!exitLink.exist, \\\"BridgeTokenManager: EXIT_EXIST\\\");\\n\\n        Link memory link = Link(enterToken, exitToken, true);\\n        _set(link);\\n\\n        return link;\\n    }\\n}\\n\",\"keccak256\":\"0x360e17313b051635acc8bc6b4cdf692adbd8856215834ddd5ff7f02e23d9d207\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5062000032620000266200007d60201b60201c565b6200008560201b60201c565b600143620000419190620001f0565b404244416040516020016200005a94939291906200019a565b6040516020818303038152906040528051906020012060808181525050620002eb565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200015e62000158826200022b565b62000273565b82525050565b6200017962000173826200023f565b62000287565b82525050565b620001946200018e8262000269565b620002a5565b82525050565b6000620001a8828762000164565b602082019150620001ba82866200017f565b602082019150620001cc82856200017f565b602082019150620001de828462000149565b60148201915081905095945050505050565b6000620001fd8262000269565b91506200020a8362000269565b92508282101562000220576200021f620002af565b5b828203905092915050565b6000620002388262000249565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620002808262000291565b9050919050565b6000819050919050565b60006200029e82620002de565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b608051611cef6200030760003960006112160152611cef6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f7ec2f01161005b5780638f7ec2f0146100c8578063de5ed097146100e4578063eac449d914610115578063f2fde38b146101315761007d565b8063715018a6146100825780638d67799e1461008c5780638da5cb5b146100aa575b600080fd5b61008a61014d565b005b6100946101d5565b6040516100a191906119d8565b60405180910390f35b6100b26101da565b6040516100bf91906118b4565b60405180910390f35b6100e260048036038101906100dd9190611487565b610203565b005b6100fe60048036038101906100f9919061144b565b6106c1565b60405161010c9291906119af565b60405180910390f35b61012f600480360381019061012a919061144b565b610733565b005b61014b60048036038101906101469190611422565b610851565b005b610155610949565b73ffffffffffffffffffffffffffffffffffffffff166101736101da565b73ffffffffffffffffffffffffffffffffffffffff16146101c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c09061194f565b60405180910390fd5b6101d36000610951565b565b600281565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020b610949565b73ffffffffffffffffffffffffffffffffffffffff166102296101da565b73ffffffffffffffffffffffffffffffffffffffff161461027f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102769061194f565b60405180910390fd5b8383905086869050146102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be9061198f565b60405180910390fd5b81819050868690501461030f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103069061198f565b60405180910390fd5b600260ff168686905014610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f9061196f565b60405180910390fd5b60004690508083836000818110610398577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135146103df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d69061190f565b60405180910390fd5b600061067360405180606001604052808a8a6000818110610429577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061043e9190611422565b73ffffffffffffffffffffffffffffffffffffffff16815260200188886000818110610493577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906104a8919061152b565b60018111156104e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018686600081811061051f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013581525060405180606001604052808b8b600181811061056e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906105839190611422565b73ffffffffffffffffffffffffffffffffffffffff168152602001898960018181106105d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906105ed919061152b565b6001811115610625577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200187876001818110610664577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815250610a15565b9050806040516106839190611899565b60405180910390207f7e4725d7a6d8fcc459e5ed68a5dd4f3b22ef573547210fe86491927a0f6e1dd060405160405180910390a25050505050505050565b6106c9611267565b6000806106d68585610aae565b905080604001516106e7575061072c565b600046905080826000015160400151141561070c578160000151935060019250610729565b8082602001516040015114156107285781602001519350600192505b5b50505b9250929050565b61073b610949565b73ffffffffffffffffffffffffffffffffffffffff166107596101da565b73ffffffffffffffffffffffffffffffffffffffff16146107af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a69061194f565b60405180910390fd5b60006107bb8383610aae565b90508060400151610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f8906118ef565b60405180910390fd5b61080a81610cf6565b806040516108189190611899565b60405180910390207f6d4cad8ce607bb77bfbd2b4c279a73df339dd1e7b7fdf84a9ad79a1e26048b9360405160405180910390a2505050565b610859610949565b73ffffffffffffffffffffffffffffffffffffffff166108776101da565b73ffffffffffffffffffffffffffffffffffffffff16146108cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c49061194f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561093d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610934906118cf565b60405180910390fd5b61094681610951565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a1d6112d6565b6000610a3183600001518460400151610aae565b9050806040015115610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f9061192f565b60405180910390fd5b60006040518060600160405280868152602001858152602001600115158152509050610aa381610ea7565b809250505092915050565b610ab66112d6565b60016000610ac48585611212565b8152602001908152602001600020604051806060016040529081600082016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610b8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610bc6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016001820154815250508152602001600282016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610c89577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610cc1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160018201548152505081526020016004820160009054906101000a900460ff161515151581525050905092915050565b60016000610d14836000015160000151846000015160400151611212565b81526020019081526020016000206000808201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556001820160009055505060028201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055600182016000905550506004820160006101000a81549060ff0219169055505060016000610deb836020015160000151846020015160400151611212565b81526020019081526020016000206000808201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556001820160009055505060028201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055600182016000905550506004820160006101000a81549060ff0219169055505050565b8060016000610ec6846000015160000151856000015160400151611212565b815260200190815260200160002060008201518160000160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115610f75577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060208201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115611027577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060408201518160040160006101000a81548160ff021916908315150217905550905050806001600061107a846020015160000151856020015160400151611212565b815260200190815260200160002060008201518160000160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115611129577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060208201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360018111156111db577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060408201518160040160006101000a81548160ff02191690831515021790555090505050565b60007f000000000000000000000000000000000000000000000000000000000000000083836040516020016112499392919061185c565b60405160208183030381529060405280519060200120905092915050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600060018111156112c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081525090565b60405180606001604052806112e9611267565b81526020016112f6611267565b81526020016000151581525090565b60008135905061131481611c7b565b92915050565b60008083601f84011261132c57600080fd5b8235905067ffffffffffffffff81111561134557600080fd5b60208301915083602082028301111561135d57600080fd5b9250929050565b60008083601f84011261137657600080fd5b8235905067ffffffffffffffff81111561138f57600080fd5b6020830191508360208202830111156113a757600080fd5b9250929050565b60008083601f8401126113c057600080fd5b8235905067ffffffffffffffff8111156113d957600080fd5b6020830191508360208202830111156113f157600080fd5b9250929050565b60008135905061140781611c92565b92915050565b60008135905061141c81611ca2565b92915050565b60006020828403121561143457600080fd5b600061144284828501611305565b91505092915050565b6000806040838503121561145e57600080fd5b600061146c85828601611305565b925050602061147d8582860161140d565b9150509250929050565b600080600080600080606087890312156114a057600080fd5b600087013567ffffffffffffffff8111156114ba57600080fd5b6114c689828a0161131a565b9650965050602087013567ffffffffffffffff8111156114e557600080fd5b6114f189828a01611364565b9450945050604087013567ffffffffffffffff81111561151057600080fd5b61151c89828a016113ae565b92509250509295509295509295565b60006020828403121561153d57600080fd5b600061154b848285016113f8565b91505092915050565b600061156083836115ea565b60208301905092915050565b6000611578838361161f565b60208301905092915050565b60006115908383611654565b60208301905092915050565b60006115a883836117d9565b60608301905092915050565b60006115c08383611827565b60208301905092915050565b6115d581611a04565b82525050565b6115e481611a04565b82525050565b6115f381611a04565b82525050565b61160a61160582611a04565b611a88565b82525050565b61161981611a16565b82525050565b61162881611a16565b82525050565b61163f61163a82611a22565b611a9a565b82525050565b61164e81611a76565b82525050565b61165d81611a76565b82525050565b60006116706026836119f3565b915061167b82611afc565b604082019050919050565b6000611693601d836119f3565b915061169e82611b4b565b602082019050919050565b60006116b66022836119f3565b91506116c182611b74565b604082019050919050565b60006116d9601e836119f3565b91506116e482611bc3565b602082019050919050565b60006116fc6020836119f3565b915061170782611bec565b602082019050919050565b600061171f601c836119f3565b915061172a82611c15565b602082019050919050565b60006117426020836119f3565b915061174d82611c3e565b602082019050919050565b60008201600082015161176b848261159c565b935050602082015161177d848261159c565b935050604082015161178f848261156c565b935050505050565b6060820160008201516117ad60008501826115cc565b5060208201516117c06020850182611645565b5060408201516117d36040850182611818565b50505050565b6000820160008201516117ec8482611554565b93505060208201516117fe8482611584565b935050604082015161181084826115b4565b935050505050565b61182181611a5f565b82525050565b61183081611a5f565b82525050565b61184761184282611a5f565b611ab6565b82525050565b61185681611a69565b82525050565b6000611868828661162e565b60208201915061187882856115f9565b6014820191506118888284611836565b602082019150819050949350505050565b60006118a58284611758565b60e08201915081905092915050565b60006020820190506118c960008301846115db565b92915050565b600060208201905081810360008301526118e881611663565b9050919050565b6000602082019050818103600083015261190881611686565b9050919050565b60006020820190508181036000830152611928816116a9565b9050919050565b60006020820190508181036000830152611948816116cc565b9050919050565b60006020820190508181036000830152611968816116ef565b9050919050565b6000602082019050818103600083015261198881611712565b9050919050565b600060208201905081810360008301526119a881611735565b9050919050565b60006080820190506119c46000830185611797565b6119d16060830184611610565b9392505050565b60006020820190506119ed600083018461184d565b92915050565b600082825260208201905092915050565b6000611a0f82611a3f565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611a3a82611c67565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611a8182611a2c565b9050919050565b6000611a9382611aa4565b9050919050565b6000819050919050565b6000611aaf82611aef565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f427269646765546f6b656e4d616e616765723a204e4f545f4558495354000000600082015250565b7f427269646765546f6b656e4d616e616765723a2057524f4e475f434841494e5f60008201527f4944000000000000000000000000000000000000000000000000000000000000602082015250565b7f427269646765546f6b656e4d616e616765723a20455849545f45584953540000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f427269646765546f6b656e4d616e616765723a204d41585f53495a4500000000600082015250565b7f427269646765546f6b656e4d616e616765723a2057524f4e475f4c454e475448600082015250565b60028110611c7857611c77611ac0565b5b50565b611c8481611a04565b8114611c8f57600080fd5b50565b60028110611c9f57600080fd5b50565b611cab81611a5f565b8114611cb657600080fd5b5056fea26469706673582212208847a414cbfaf7e357850f76ca8bd078f3e7a997999d32f80b56fffec35f552964736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f7ec2f01161005b5780638f7ec2f0146100c8578063de5ed097146100e4578063eac449d914610115578063f2fde38b146101315761007d565b8063715018a6146100825780638d67799e1461008c5780638da5cb5b146100aa575b600080fd5b61008a61014d565b005b6100946101d5565b6040516100a191906119d8565b60405180910390f35b6100b26101da565b6040516100bf91906118b4565b60405180910390f35b6100e260048036038101906100dd9190611487565b610203565b005b6100fe60048036038101906100f9919061144b565b6106c1565b60405161010c9291906119af565b60405180910390f35b61012f600480360381019061012a919061144b565b610733565b005b61014b60048036038101906101469190611422565b610851565b005b610155610949565b73ffffffffffffffffffffffffffffffffffffffff166101736101da565b73ffffffffffffffffffffffffffffffffffffffff16146101c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c09061194f565b60405180910390fd5b6101d36000610951565b565b600281565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020b610949565b73ffffffffffffffffffffffffffffffffffffffff166102296101da565b73ffffffffffffffffffffffffffffffffffffffff161461027f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102769061194f565b60405180910390fd5b8383905086869050146102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be9061198f565b60405180910390fd5b81819050868690501461030f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103069061198f565b60405180910390fd5b600260ff168686905014610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f9061196f565b60405180910390fd5b60004690508083836000818110610398577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135146103df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d69061190f565b60405180910390fd5b600061067360405180606001604052808a8a6000818110610429577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060200201602081019061043e9190611422565b73ffffffffffffffffffffffffffffffffffffffff16815260200188886000818110610493577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906104a8919061152b565b60018111156104e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018686600081811061051f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013581525060405180606001604052808b8b600181811061056e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906105839190611422565b73ffffffffffffffffffffffffffffffffffffffff168152602001898960018181106105d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020160208101906105ed919061152b565b6001811115610625577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200187876001818110610664577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90506020020135815250610a15565b9050806040516106839190611899565b60405180910390207f7e4725d7a6d8fcc459e5ed68a5dd4f3b22ef573547210fe86491927a0f6e1dd060405160405180910390a25050505050505050565b6106c9611267565b6000806106d68585610aae565b905080604001516106e7575061072c565b600046905080826000015160400151141561070c578160000151935060019250610729565b8082602001516040015114156107285781602001519350600192505b5b50505b9250929050565b61073b610949565b73ffffffffffffffffffffffffffffffffffffffff166107596101da565b73ffffffffffffffffffffffffffffffffffffffff16146107af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a69061194f565b60405180910390fd5b60006107bb8383610aae565b90508060400151610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f8906118ef565b60405180910390fd5b61080a81610cf6565b806040516108189190611899565b60405180910390207f6d4cad8ce607bb77bfbd2b4c279a73df339dd1e7b7fdf84a9ad79a1e26048b9360405160405180910390a2505050565b610859610949565b73ffffffffffffffffffffffffffffffffffffffff166108776101da565b73ffffffffffffffffffffffffffffffffffffffff16146108cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c49061194f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561093d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610934906118cf565b60405180910390fd5b61094681610951565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a1d6112d6565b6000610a3183600001518460400151610aae565b9050806040015115610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f9061192f565b60405180910390fd5b60006040518060600160405280868152602001858152602001600115158152509050610aa381610ea7565b809250505092915050565b610ab66112d6565b60016000610ac48585611212565b8152602001908152602001600020604051806060016040529081600082016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610b8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610bc6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016001820154815250508152602001600282016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff166001811115610c89577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610cc1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160018201548152505081526020016004820160009054906101000a900460ff161515151581525050905092915050565b60016000610d14836000015160000151846000015160400151611212565b81526020019081526020016000206000808201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556001820160009055505060028201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055600182016000905550506004820160006101000a81549060ff0219169055505060016000610deb836020015160000151846020015160400151611212565b81526020019081526020016000206000808201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556001820160009055505060028201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff0219169055600182016000905550506004820160006101000a81549060ff0219169055505050565b8060016000610ec6846000015160000151856000015160400151611212565b815260200190815260200160002060008201518160000160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115610f75577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060208201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115611027577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060408201518160040160006101000a81548160ff021916908315150217905550905050806001600061107a846020015160000151856020015160400151611212565b815260200190815260200160002060008201518160000160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836001811115611129577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060208201518160020160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360018111156111db577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010155505060408201518160040160006101000a81548160ff02191690831515021790555090505050565b60007f000000000000000000000000000000000000000000000000000000000000000083836040516020016112499392919061185c565b60405160208183030381529060405280519060200120905092915050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600060018111156112c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081525090565b60405180606001604052806112e9611267565b81526020016112f6611267565b81526020016000151581525090565b60008135905061131481611c7b565b92915050565b60008083601f84011261132c57600080fd5b8235905067ffffffffffffffff81111561134557600080fd5b60208301915083602082028301111561135d57600080fd5b9250929050565b60008083601f84011261137657600080fd5b8235905067ffffffffffffffff81111561138f57600080fd5b6020830191508360208202830111156113a757600080fd5b9250929050565b60008083601f8401126113c057600080fd5b8235905067ffffffffffffffff8111156113d957600080fd5b6020830191508360208202830111156113f157600080fd5b9250929050565b60008135905061140781611c92565b92915050565b60008135905061141c81611ca2565b92915050565b60006020828403121561143457600080fd5b600061144284828501611305565b91505092915050565b6000806040838503121561145e57600080fd5b600061146c85828601611305565b925050602061147d8582860161140d565b9150509250929050565b600080600080600080606087890312156114a057600080fd5b600087013567ffffffffffffffff8111156114ba57600080fd5b6114c689828a0161131a565b9650965050602087013567ffffffffffffffff8111156114e557600080fd5b6114f189828a01611364565b9450945050604087013567ffffffffffffffff81111561151057600080fd5b61151c89828a016113ae565b92509250509295509295509295565b60006020828403121561153d57600080fd5b600061154b848285016113f8565b91505092915050565b600061156083836115ea565b60208301905092915050565b6000611578838361161f565b60208301905092915050565b60006115908383611654565b60208301905092915050565b60006115a883836117d9565b60608301905092915050565b60006115c08383611827565b60208301905092915050565b6115d581611a04565b82525050565b6115e481611a04565b82525050565b6115f381611a04565b82525050565b61160a61160582611a04565b611a88565b82525050565b61161981611a16565b82525050565b61162881611a16565b82525050565b61163f61163a82611a22565b611a9a565b82525050565b61164e81611a76565b82525050565b61165d81611a76565b82525050565b60006116706026836119f3565b915061167b82611afc565b604082019050919050565b6000611693601d836119f3565b915061169e82611b4b565b602082019050919050565b60006116b66022836119f3565b91506116c182611b74565b604082019050919050565b60006116d9601e836119f3565b91506116e482611bc3565b602082019050919050565b60006116fc6020836119f3565b915061170782611bec565b602082019050919050565b600061171f601c836119f3565b915061172a82611c15565b602082019050919050565b60006117426020836119f3565b915061174d82611c3e565b602082019050919050565b60008201600082015161176b848261159c565b935050602082015161177d848261159c565b935050604082015161178f848261156c565b935050505050565b6060820160008201516117ad60008501826115cc565b5060208201516117c06020850182611645565b5060408201516117d36040850182611818565b50505050565b6000820160008201516117ec8482611554565b93505060208201516117fe8482611584565b935050604082015161181084826115b4565b935050505050565b61182181611a5f565b82525050565b61183081611a5f565b82525050565b61184761184282611a5f565b611ab6565b82525050565b61185681611a69565b82525050565b6000611868828661162e565b60208201915061187882856115f9565b6014820191506118888284611836565b602082019150819050949350505050565b60006118a58284611758565b60e08201915081905092915050565b60006020820190506118c960008301846115db565b92915050565b600060208201905081810360008301526118e881611663565b9050919050565b6000602082019050818103600083015261190881611686565b9050919050565b60006020820190508181036000830152611928816116a9565b9050919050565b60006020820190508181036000830152611948816116cc565b9050919050565b60006020820190508181036000830152611968816116ef565b9050919050565b6000602082019050818103600083015261198881611712565b9050919050565b600060208201905081810360008301526119a881611735565b9050919050565b60006080820190506119c46000830185611797565b6119d16060830184611610565b9392505050565b60006020820190506119ed600083018461184d565b92915050565b600082825260208201905092915050565b6000611a0f82611a3f565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611a3a82611c67565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611a8182611a2c565b9050919050565b6000611a9382611aa4565b9050919050565b6000819050919050565b6000611aaf82611aef565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f427269646765546f6b656e4d616e616765723a204e4f545f4558495354000000600082015250565b7f427269646765546f6b656e4d616e616765723a2057524f4e475f434841494e5f60008201527f4944000000000000000000000000000000000000000000000000000000000000602082015250565b7f427269646765546f6b656e4d616e616765723a20455849545f45584953540000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f427269646765546f6b656e4d616e616765723a204d41585f53495a4500000000600082015250565b7f427269646765546f6b656e4d616e616765723a2057524f4e475f4c454e475448600082015250565b60028110611c7857611c77611ac0565b5b50565b611c8481611a04565b8114611c8f57600080fd5b50565b60028110611c9f57600080fd5b50565b611cab81611a5f565b8114611cb657600080fd5b5056fea26469706673582212208847a414cbfaf7e357850f76ca8bd078f3e7a997999d32f80b56fffec35f552964736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "fetch(address,uint256)": {
        "details": "This should be responsible to get token mapping for cross chain",
        "params": {
          "addr": "address of token to get it's association",
          "chainId": "of domain where token used"
        }
      },
      "issue(address[],uint8[],uint256[])": {
        "details": "This should be responsible to connect tokens between chains",
        "params": {
          "chainIds": "where they are located",
          "issueTypes": "for tokens",
          "tokens": "addresses on link connection"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revoke(address,uint256)": {
        "details": "This should be responsible to remove tokens connection between chains",
        "params": {
          "addr": "address of token to revoke",
          "chainId": "of domain where token used"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 208,
        "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
        "label": "_links",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(Link)157_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(IssueType)140": {
        "encoding": "inplace",
        "label": "enum IBridgeTokenManager.IssueType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_bytes32,t_struct(Link)157_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct IBridgeTokenManager.Link)",
        "numberOfBytes": "32",
        "value": "t_struct(Link)157_storage"
      },
      "t_struct(Link)157_storage": {
        "encoding": "inplace",
        "label": "struct IBridgeTokenManager.Link",
        "members": [
          {
            "astId": 151,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "enterToken",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Token)148_storage"
          },
          {
            "astId": 154,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "exitToken",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Token)148_storage"
          },
          {
            "astId": 156,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "exist",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Token)148_storage": {
        "encoding": "inplace",
        "label": "struct IBridgeTokenManager.Token",
        "members": [
          {
            "astId": 142,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 145,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "issueType",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(IssueType)140"
          },
          {
            "astId": 147,
            "contract": "contracts/managers/BridgeTokenManager.sol:BridgeTokenManager",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}