{
  "address": "0x5d21746690f4A332DA81FD239f8e970FfDC624E0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd83f1232e2ed22be60c2cbbd7b72f9fe718eaf00ce06a052831efae3bc3854bb",
  "receipt": {
    "to": null,
    "from": "0x73b72d6EE63e16c898AD18C7f447846BfC3AB1aC",
    "contractAddress": "0x5d21746690f4A332DA81FD239f8e970FfDC624E0",
    "transactionIndex": 0,
    "gasUsed": "1156995",
    "logsBloom": "0x
    "blockHash": "0x165148471ca687ef3d37105d7cda6ae141676174a6201dd32f05abd4ece41e00",
    "transactionHash": "0xd83f1232e2ed22be60c2cbbd7b72f9fe718eaf00ce06a052831efae3bc3854bb",
    "logs": [],
    "blockNumber": 32142,
    "cumulativeGasUsed": "1156995",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Wrapped OLT",
    "WOLT",
    18
  ],
  "solcInputHash": "e9a573b4b18ad8e886ec106f363c2413",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"stateVariables\":{\"allowance\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf\":{\"details\":\"Returns the amount of tokens owned by `account`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WrappedToken.sol\":\"WrappedToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/WrappedToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./interfaces/IWETH.sol\\\";\\n\\ncontract WrappedToken is ReentrancyGuard, IWETH {\\n    string public name;\\n    string public symbol;\\n    uint8 public immutable decimals;\\n\\n    mapping(address => uint256) public override balanceOf;\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n\\n    receive() external payable {\\n        deposit();\\n    }\\n\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        uint8 decimals_\\n    ) {\\n        name = name_;\\n        symbol = symbol_;\\n        decimals = decimals_;\\n    }\\n\\n    function deposit() public payable override {\\n        balanceOf[msg.sender] += msg.value;\\n        emit Deposit(msg.sender, msg.value);\\n    }\\n\\n    function withdraw(uint256 wad) public override nonReentrant {\\n        require(\\n            balanceOf[msg.sender] >= wad,\\n            \\\"WrappedToken: INSUFFICIENT_AMOUNT\\\"\\n        );\\n        balanceOf[msg.sender] -= wad;\\n        (bool success, ) = msg.sender.call{value: wad}(\\\"\\\");\\n        require(success, \\\"WrappedToken: TRANSFER_FAILED\\\");\\n        emit Withdrawal(msg.sender, wad);\\n    }\\n\\n    function totalSupply() public view override returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function approve(address guy, uint256 wad) public override returns (bool) {\\n        allowance[msg.sender][guy] = wad;\\n        emit Approval(msg.sender, guy, wad);\\n        return true;\\n    }\\n\\n    function transfer(address dst, uint256 wad) public override returns (bool) {\\n        return transferFrom(msg.sender, dst, wad);\\n    }\\n\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 wad\\n    ) public override returns (bool) {\\n        require(balanceOf[src] >= wad, \\\"WrappedToken: INSUFFICIENT_AMOUNT\\\");\\n\\n        if (\\n            src != msg.sender && allowance[src][msg.sender] != type(uint256).max\\n        ) {\\n            require(\\n                allowance[src][msg.sender] >= wad,\\n                \\\"WrappedToken: INSUFFICIENT_ALLOWANCE\\\"\\n            );\\n            allowance[src][msg.sender] -= wad;\\n        }\\n\\n        balanceOf[src] -= wad;\\n        balanceOf[dst] += wad;\\n\\n        emit Transfer(src, dst, wad);\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x038584d955e678d1978606605704fcebe25f1fcc6c614be4bac7ac7842cf32e0\",\"license\":\"MIT\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWETH is IERC20 {\\n    event Deposit(address indexed dst, uint256 wad);\\n    event Withdrawal(address indexed src, uint256 wad);\\n\\n    function deposit() external payable;\\n\\n    function withdraw(uint256) external;\\n}\\n\",\"keccak256\":\"0x8f559d34b550babeca68580b00d0544481b9f0349326891af2d3db25af278b25\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001685380380620016858339818101604052810190620000379190620001c4565b60016000819055508260019080519060200190620000579291906200008b565b508160029080519060200190620000709291906200008b565b508060ff1660808160ff1660f81b81525050505050620003e3565b8280546200009990620002ee565b90600052602060002090601f016020900481019282620000bd576000855562000109565b82601f10620000d857805160ff191683800117855562000109565b8280016001018555821562000109579182015b8281111562000108578251825591602001919060010190620000eb565b5b5090506200011891906200011c565b5090565b5b80821115620001375760008160009055506001016200011d565b5090565b6000620001526200014c8462000275565b6200024c565b9050828152602081018484840111156200016b57600080fd5b62000178848285620002b8565b509392505050565b600082601f8301126200019257600080fd5b8151620001a48482602086016200013b565b91505092915050565b600081519050620001be81620003c9565b92915050565b600080600060608486031215620001da57600080fd5b600084015167ffffffffffffffff811115620001f557600080fd5b620002038682870162000180565b935050602084015167ffffffffffffffff8111156200022157600080fd5b6200022f8682870162000180565b92505060406200024286828701620001ad565b9150509250925092565b6000620002586200026b565b905062000266828262000324565b919050565b6000604051905090565b600067ffffffffffffffff82111562000293576200029262000389565b5b6200029e82620003b8565b9050602081019050919050565b600060ff82169050919050565b60005b83811015620002d8578082015181840152602081019050620002bb565b83811115620002e8576000848401525b50505050565b600060028204905060018216806200030757607f821691505b602082108114156200031e576200031d6200035a565b5b50919050565b6200032f82620003b8565b810181811067ffffffffffffffff8211171562000351576200035062000389565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620003d481620002ab565b8114620003e057600080fd5b50565b60805160f81c611283620004026000396000610af001526112836000f3fe6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce567146101ad57806370a08231146101d857806395d89b4114610215578063a9059cbb14610240578063d0e30db01461027d578063dd62ed3e14610287576100af565b806306fdde03146100b4578063095ea7b3146100df57806318160ddd1461011c57806323b872dd146101475780632e1a7d4d14610184576100af565b366100af576100ad6102c4565b005b600080fd5b3480156100c057600080fd5b506100c961036a565b6040516100d69190610e7a565b60405180910390f35b3480156100eb57600080fd5b5061010660048036038101906101019190610cd0565b6103f8565b6040516101139190610e5f565b60405180910390f35b34801561012857600080fd5b506101316104ea565b60405161013e9190610f1c565b60405180910390f35b34801561015357600080fd5b5061016e60048036038101906101699190610c81565b6104f2565b60405161017b9190610e5f565b60405180910390f35b34801561019057600080fd5b506101ab60048036038101906101a69190610d0c565b6108c2565b005b3480156101b957600080fd5b506101c2610aee565b6040516101cf9190610f37565b60405180910390f35b3480156101e457600080fd5b506101ff60048036038101906101fa9190610c1c565b610b12565b60405161020c9190610f1c565b60405180910390f35b34801561022157600080fd5b5061022a610b2a565b6040516102379190610e7a565b60405180910390f35b34801561024c57600080fd5b5061026760048036038101906102629190610cd0565b610bb8565b6040516102749190610e5f565b60405180910390f35b6102856102c4565b005b34801561029357600080fd5b506102ae60048036038101906102a99190610c45565b610bcd565b6040516102bb9190610f1c565b60405180910390f35b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103139190610f79565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040516103609190610f1c565b60405180910390a2565b600180546103779061108b565b80601f01602080910402602001604051908101604052809291908181526020018280546103a39061108b565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104d89190610f1c565b60405180910390a36001905092915050565b600047905090565b600081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d90610ebc565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561064e57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156107a65781600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070990610edc565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461079e9190610fcf565b925050819055505b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107f59190610fcf565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461084b9190610f79565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108af9190610f1c565b60405180910390a3600190509392505050565b60026000541415610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90610efc565b60405180910390fd5b600260008190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098990610ebc565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e19190610fcf565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610a0e90610e4a565b60006040518083038185875af1925050503d8060008114610a4b576040519150601f19603f3d011682016040523d82523d6000602084013e610a50565b606091505b5050905080610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90610e9c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6583604051610ada9190610f1c565b60405180910390a250600160008190555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60036020528060005260406000206000915090505481565b60028054610b379061108b565b80601f0160208091040260200160405190810160405280929190818152602001828054610b639061108b565b8015610bb05780601f10610b8557610100808354040283529160200191610bb0565b820191906000526020600020905b815481529060010190602001808311610b9357829003601f168201915b505050505081565b6000610bc53384846104f2565b905092915050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600081359050610c018161121f565b92915050565b600081359050610c1681611236565b92915050565b600060208284031215610c2e57600080fd5b6000610c3c84828501610bf2565b91505092915050565b60008060408385031215610c5857600080fd5b6000610c6685828601610bf2565b9250506020610c7785828601610bf2565b9150509250929050565b600080600060608486031215610c9657600080fd5b6000610ca486828701610bf2565b9350506020610cb586828701610bf2565b9250506040610cc686828701610c07565b9150509250925092565b60008060408385031215610ce357600080fd5b6000610cf185828601610bf2565b9250506020610d0285828601610c07565b9150509250929050565b600060208284031215610d1e57600080fd5b6000610d2c84828501610c07565b91505092915050565b610d3e81611015565b82525050565b6000610d4f82610f52565b610d598185610f68565b9350610d69818560208601611058565b610d728161111b565b840191505092915050565b6000610d8a601d83610f68565b9150610d958261112c565b602082019050919050565b6000610dad602183610f68565b9150610db882611155565b604082019050919050565b6000610dd0600083610f5d565b9150610ddb826111a4565b600082019050919050565b6000610df3602483610f68565b9150610dfe826111a7565b604082019050919050565b6000610e16601f83610f68565b9150610e21826111f6565b602082019050919050565b610e3581611041565b82525050565b610e448161104b565b82525050565b6000610e5582610dc3565b9150819050919050565b6000602082019050610e746000830184610d35565b92915050565b60006020820190508181036000830152610e948184610d44565b905092915050565b60006020820190508181036000830152610eb581610d7d565b9050919050565b60006020820190508181036000830152610ed581610da0565b9050919050565b60006020820190508181036000830152610ef581610de6565b9050919050565b60006020820190508181036000830152610f1581610e09565b9050919050565b6000602082019050610f316000830184610e2c565b92915050565b6000602082019050610f4c6000830184610e3b565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610f8482611041565b9150610f8f83611041565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fc457610fc36110bd565b5b828201905092915050565b6000610fda82611041565b9150610fe583611041565b925082821015610ff857610ff76110bd565b5b828203905092915050565b600061100e82611021565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561107657808201518184015260208101905061105b565b83811115611085576000848401525b50505050565b600060028204905060018216806110a357607f821691505b602082108114156110b7576110b66110ec565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f57726170706564546f6b656e3a205452414e534645525f4641494c4544000000600082015250565b7f57726170706564546f6b656e3a20494e53554646494349454e545f414d4f554e60008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b50565b7f57726170706564546f6b656e3a20494e53554646494349454e545f414c4c4f5760008201527f414e434500000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61122881611003565b811461123357600080fd5b50565b61123f81611041565b811461124a57600080fd5b5056fea2646970667358221220b672ff5458b367a775417c7d77c9c8ce1c29ebf6d7c7d7d25bb972b844cd52ad64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce567146101ad57806370a08231146101d857806395d89b4114610215578063a9059cbb14610240578063d0e30db01461027d578063dd62ed3e14610287576100af565b806306fdde03146100b4578063095ea7b3146100df57806318160ddd1461011c57806323b872dd146101475780632e1a7d4d14610184576100af565b366100af576100ad6102c4565b005b600080fd5b3480156100c057600080fd5b506100c961036a565b6040516100d69190610e7a565b60405180910390f35b3480156100eb57600080fd5b5061010660048036038101906101019190610cd0565b6103f8565b6040516101139190610e5f565b60405180910390f35b34801561012857600080fd5b506101316104ea565b60405161013e9190610f1c565b60405180910390f35b34801561015357600080fd5b5061016e60048036038101906101699190610c81565b6104f2565b60405161017b9190610e5f565b60405180910390f35b34801561019057600080fd5b506101ab60048036038101906101a69190610d0c565b6108c2565b005b3480156101b957600080fd5b506101c2610aee565b6040516101cf9190610f37565b60405180910390f35b3480156101e457600080fd5b506101ff60048036038101906101fa9190610c1c565b610b12565b60405161020c9190610f1c565b60405180910390f35b34801561022157600080fd5b5061022a610b2a565b6040516102379190610e7a565b60405180910390f35b34801561024c57600080fd5b5061026760048036038101906102629190610cd0565b610bb8565b6040516102749190610e5f565b60405180910390f35b6102856102c4565b005b34801561029357600080fd5b506102ae60048036038101906102a99190610c45565b610bcd565b6040516102bb9190610f1c565b60405180910390f35b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103139190610f79565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040516103609190610f1c565b60405180910390a2565b600180546103779061108b565b80601f01602080910402602001604051908101604052809291908181526020018280546103a39061108b565b80156103f05780601f106103c5576101008083540402835291602001916103f0565b820191906000526020600020905b8154815290600101906020018083116103d357829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104d89190610f1c565b60405180910390a36001905092915050565b600047905090565b600081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d90610ebc565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561064e57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156107a65781600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070990610edc565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461079e9190610fcf565b925050819055505b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107f59190610fcf565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461084b9190610f79565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108af9190610f1c565b60405180910390a3600190509392505050565b60026000541415610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90610efc565b60405180910390fd5b600260008190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098990610ebc565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e19190610fcf565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610a0e90610e4a565b60006040518083038185875af1925050503d8060008114610a4b576040519150601f19603f3d011682016040523d82523d6000602084013e610a50565b606091505b5050905080610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90610e9c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6583604051610ada9190610f1c565b60405180910390a250600160008190555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60036020528060005260406000206000915090505481565b60028054610b379061108b565b80601f0160208091040260200160405190810160405280929190818152602001828054610b639061108b565b8015610bb05780601f10610b8557610100808354040283529160200191610bb0565b820191906000526020600020905b815481529060010190602001808311610b9357829003601f168201915b505050505081565b6000610bc53384846104f2565b905092915050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600081359050610c018161121f565b92915050565b600081359050610c1681611236565b92915050565b600060208284031215610c2e57600080fd5b6000610c3c84828501610bf2565b91505092915050565b60008060408385031215610c5857600080fd5b6000610c6685828601610bf2565b9250506020610c7785828601610bf2565b9150509250929050565b600080600060608486031215610c9657600080fd5b6000610ca486828701610bf2565b9350506020610cb586828701610bf2565b9250506040610cc686828701610c07565b9150509250925092565b60008060408385031215610ce357600080fd5b6000610cf185828601610bf2565b9250506020610d0285828601610c07565b9150509250929050565b600060208284031215610d1e57600080fd5b6000610d2c84828501610c07565b91505092915050565b610d3e81611015565b82525050565b6000610d4f82610f52565b610d598185610f68565b9350610d69818560208601611058565b610d728161111b565b840191505092915050565b6000610d8a601d83610f68565b9150610d958261112c565b602082019050919050565b6000610dad602183610f68565b9150610db882611155565b604082019050919050565b6000610dd0600083610f5d565b9150610ddb826111a4565b600082019050919050565b6000610df3602483610f68565b9150610dfe826111a7565b604082019050919050565b6000610e16601f83610f68565b9150610e21826111f6565b602082019050919050565b610e3581611041565b82525050565b610e448161104b565b82525050565b6000610e5582610dc3565b9150819050919050565b6000602082019050610e746000830184610d35565b92915050565b60006020820190508181036000830152610e948184610d44565b905092915050565b60006020820190508181036000830152610eb581610d7d565b9050919050565b60006020820190508181036000830152610ed581610da0565b9050919050565b60006020820190508181036000830152610ef581610de6565b9050919050565b60006020820190508181036000830152610f1581610e09565b9050919050565b6000602082019050610f316000830184610e2c565b92915050565b6000602082019050610f4c6000830184610e3b565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610f8482611041565b9150610f8f83611041565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fc457610fc36110bd565b5b828201905092915050565b6000610fda82611041565b9150610fe583611041565b925082821015610ff857610ff76110bd565b5b828203905092915050565b600061100e82611021565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561107657808201518184015260208101905061105b565b83811115611085576000848401525b50505050565b600060028204905060018216806110a357607f821691505b602082108114156110b7576110b66110ec565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f57726170706564546f6b656e3a205452414e534645525f4641494c4544000000600082015250565b7f57726170706564546f6b656e3a20494e53554646494349454e545f414d4f554e60008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b50565b7f57726170706564546f6b656e3a20494e53554646494349454e545f414c4c4f5760008201527f414e434500000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61122881611003565b811461123357600080fd5b50565b61123f81611041565b811461124a57600080fd5b5056fea2646970667358221220b672ff5458b367a775417c7d77c9c8ce1c29ebf6d7c7d7d25bb972b844cd52ad64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "stateVariables": {
      "allowance": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "balanceOf": {
        "details": "Returns the amount of tokens owned by `account`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/WrappedToken.sol:WrappedToken",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 127,
        "contract": "contracts/WrappedToken.sol:WrappedToken",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 129,
        "contract": "contracts/WrappedToken.sol:WrappedToken",
        "label": "symbol",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 136,
        "contract": "contracts/WrappedToken.sol:WrappedToken",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 143,
        "contract": "contracts/WrappedToken.sol:WrappedToken",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}